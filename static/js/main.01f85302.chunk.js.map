{"version":3,"sources":["Components/Country.jsx","Components/Wrapper.jsx","Components/Country-list.jsx","Components/Reducer.js","Components/Input.jsx","Components/Search.jsx","Components/Region.jsx","Components/Action-list.jsx","Components/Header.jsx","Components/Country-Selected.jsx","Components/Country-Page.jsx","App.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","capital","population","region","alpha2Code","nativeName","history","useHistory","onClick","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","countryFilteredByRegion","useEffect","fetch","then","response","json","list","type","payload","catch","console","log","map","key","reducer","action","filter","country","toLowerCase","includes","regionSelected","InputStyled","label","Input","props","SearchStyled","Search","params","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","RegionFilterStyled","select","Region","selectEvent","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","subregion","topLevelDomain","currencies","languages","borders","item","CountryPageStyled","CountryPage","match","DBcountry","find","id","setCountry","data","goBack","store","createStore","App","checked","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.01f85302.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport slugify from \"slugify\";\n\nconst CountryStyled = styled.div`\n  cursor: pointer;\n  text-align: left;\n  border-radius: 5px;\n  overflow: hidden;\n  margin: 1em;\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\n  &:hover .details {\n    border-radius: 0 0 5px 5px;\n    border: 1px solid var(--black);\n    border-top: none;\n  }\n  img {\n    width: 100%;\n    height: 160px;\n    object-fit: cover;\n    vertical-align: top;\n    border-radius: 5px 5px 0 0;\n  }\n  .details {\n    padding: 1.5em;\n    border: 1px solid transparent;\n    border-top: none;\n    transition: 0.3s border;\n    background: var(--white);\n  }\n  h2 {\n    margin: 0;\n    margin-bottom: 1rem;\n    font-size: 18px;\n    font-weight: 700;\n  }\n  p {\n    font-size: 0.9em;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nfunction Country({\n  flag,\n  name,\n  capital,\n  population,\n  region,\n  nativeName,\n  alpha2Code,\n}) {\n  const history = useHistory();\n  function handleClick() {\n    history.push(`/country/${slugify(alpha2Code)}`);\n  }\n  return (\n    <CountryStyled onClick={handleClick}>\n      <img loading=\"lazy\" src={flag} alt=\"Bandera\" />\n      <div className=\"details\">\n        <h2>{name}</h2>\n        <p>\n          <strong>Capital: </strong>\n          {capital}\n        </p>\n        <p>\n          <strong>Population: </strong>\n          {population}\n        </p>\n        <p>\n          <strong>Region: </strong>\n          {region}\n        </p>\n      </div>\n    </CountryStyled>\n  );\n}\n\nexport default Country;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WrapperStyled = styled.div`\n  max-width: 1280px;\n  margin: auto;\n  padding: 0 1rem;\n`;\n\nfunction Wrapper({ children }) {\n  return <WrapperStyled>{children}</WrapperStyled>;\n}\n\nexport default Wrapper;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Country from \"./Country\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Wrapper from \"./Wrapper\";\n\nconst CountryListStyled = styled.div`\n  display: grid;\n  grid-row-gap: 2.3em;\n  grid-auto-flow: columns;\n  grid-column-gap: 66px;\n  grid-template-columns: repeat(auto-fill, 270px);\n  background: var(--background);\n  justify-content: center;\n  padding: 3em 0;\n`;\n\nfunction CountryList() {\n  const dispatch = useDispatch();\n  //const countryList = useSelector((state) => state.countryList);\n  const countryListByName = useSelector((state) => state.countryListByName);\n  const countryList = useSelector((state) => {\n    if (state.filterByRegion !== \"\" && countryListByName.length === 0) {\n      return state.countryFilteredByRegion;\n    }\n    if (countryListByName.length > 0) {\n      return countryListByName;\n    }\n\n    return state.countryList;\n  });\n\n  // const [countryList, setCountryList] = useState([]);\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((list) => {\n        dispatch({\n          type: \"SET_COUNTRY_LIST\",\n          payload: list,\n        });\n        // setCountryList(list);\n      })\n      .catch(() => {\n        console.log(\"Hubo un error con la petición\");\n      });\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <CountryListStyled>\n        {/* {countryListByName.length === 0 && inputValue && (\n        <p>\n          <strong>{inputValue}</strong> Not found in countries\n        </p>\n      )} */}\n        {countryList.map(\n          ({\n            flag,\n            name,\n            capital,\n            population,\n            region,\n            nativeName,\n            alpha2Code,\n          }) => {\n            return (\n              <Country\n                key={name}\n                flag={flag}\n                name={name}\n                capital={capital}\n                population={population}\n                region={region}\n                nativeName={nativeName}\n                alpha2Code={alpha2Code}\n              />\n            );\n          }\n        )}\n      </CountryListStyled>\n    </Wrapper>\n  );\n}\n\nexport default CountryList;\n","function reducer(state, action) {\n  switch (action.type) {\n    case \"SET_COUNTRY_LIST\": {\n      console.log(\"Voy a actualizar la lista de paises\");\n      return { ...state, countryList: action.payload };\n    }\n    case \"SET_COUNTRY_BY_NAME\": {\n      let list;\n      if (state.filterByRegion !== \"\") {\n        list = state.countryFilteredByRegion;\n      } else {\n        list = state.countryList;\n      }\n      const countryListByName = list.filter((country) =>\n        country.name.toLowerCase().includes(action.payload.toLowerCase())\n      );\n      return { ...state, countryListByName };\n    }\n    case \"FILTER_BY_REGION\": {\n      const { regionSelected } = action.payload;\n      if (regionSelected === \"\") {\n        return { ...state, countryFilteredByRegion: [], filterByRegion: \"\" };\n      }\n\n      const countryFilteredByRegion = state.countryList.filter(\n        (country) => country.region === regionSelected\n      );\n\n      return {\n        ...state,\n        countryFilteredByRegion,\n        filterByRegion: regionSelected,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default reducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputStyled = styled.label`\n  display: inline-flex;\n  background: var(--white);\n  align-items: center;\n  box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n  padding: 0 2 rem;\n  border-radius: 5px;\n  flex: 1;\n  i {\n    margin-right: 1em;\n    color: #c4c4c4;\n  }\n  input {\n    flex: 1;\n    border: none;\n    height: 48px;\n    line-height: 48px;\n    font-size: 0.7em;\n    color: var(--black);\n    background: var(--white);\n    &::-webkit-input-placeholder {\n      color: #c4c4c4;\n    }\n  }\n`;\n\nfunction Input({ ...props }) {\n  return (\n    <InputStyled>\n      <i className=\"fas fa-search\"></i>\n      <input type=\"text\" {...props} />\n    </InputStyled>\n  );\n}\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./Input\";\nimport { useDispatch } from \"react-redux\";\n\nconst SearchStyled = styled.div`\n  display: flex;\n  position: relative;\n  .close {\n    position: absolute;\n    right: 1em;\n    top: 1em;\n    border-radius: 50%;\n    border: none;\n    box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n  }\n`;\n\nfunction Search(params) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const filterByName = (e) => {\n    setInputValue(e.target.value);\n    dispatch({\n      type: \"SET_COUNTRY_BY_NAME\",\n      payload: e.target.value,\n    });\n  };\n  const clearInput = () => {\n    dispatch({\n      type: \"SET_COUNTRY_BY_NAME\",\n      payload: \"\",\n    });\n    setInputValue(\"\");\n  };\n  return (\n    <SearchStyled>\n      {inputValue && (\n        <i className=\"close fas fa-times\" onClick={clearInput}></i>\n      )}\n      <Input\n        placeholder=\"Search for a country...\"\n        value={inputValue}\n        onChange={filterByName}\n      />\n    </SearchStyled>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst RegionFilterStyled = styled.select`\n  padding: 1.3em;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n  outline: 0;\n  background: var(--white);\n  color: var(--black);\n`;\n\nconst filterByRegionAction = (regionSelected) => {\n  return {\n    type: \"FILTER_BY_REGION\",\n    payload: { regionSelected },\n  };\n};\n\nexport const Region = () => {\n  const dispatch = useDispatch();\n  const filterByRegion = useSelector((state) => state.filterByRegion);\n\n  /**\n   * Disptach filterByRegion action\n   *\n   * @param {React.SyntheticEvent} selectEvent\n   */\n  const onRegionChange = (selectEvent) => {\n    const value = selectEvent.target.value;\n\n    dispatch(filterByRegionAction(value));\n  };\n\n  return (\n    <RegionFilterStyled onChange={onRegionChange} value={filterByRegion}>\n      <option value=\"\">Filter by region</option>\n      <option value=\"Africa\">Africa</option>\n      <option value=\"Americas\">Americas</option>\n      <option value=\"Asia\">Asia</option>\n      <option value=\"Europe\">Europe</option>\n      <option value=\"Oceania\">Oceania</option>\n    </RegionFilterStyled>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Search from \"./Search\";\nimport { Region as FilterByRegion } from \"./Region\";\nimport Wrapper from \"./Wrapper\";\n\nconst ActionListStyled = styled.div`\n  .grid {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-row-gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    .grid {\n      grid-template-columns: 400px 1fr 200px;\n    }\n  }\n`;\n\nfunction ActionList(params) {\n  return (\n    <ActionListStyled>\n      <Wrapper>\n        <div className=\"grid\">\n          <Search />\n          <span></span>\n          <FilterByRegion />\n        </div>\n      </Wrapper>\n    </ActionListStyled>\n  );\n}\n\nexport default ActionList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./Wrapper\";\nimport { Link } from \"react-router-dom\";\n\nconst HeaderStyled = styled.div`\n  background: var(--white);\n  margin-bottom: 1em;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.06);\n  .content {\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  h1 {\n    font-size: 14px;\n  }\n  a {\n    text-decoration: none;\n    color: var(--dark);\n  }\n  .dark-mode {\n    cursor: pointer;\n    .moon {\n      transform: rotate(-25deg);\n      display: inline-flex;\n      margin-right: 10px;\n    }\n    p {\n      font-size: 12px;\n      font-weight: 600;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 3em;\n    h1 {\n      font-size: 24px;\n    }\n    p {\n      font-size: 1rem;\n    }\n  }\n`;\n\nfunction Header({ setDarkMode, darkMode }) {\n  function handleClick() {\n    setDarkMode(!darkMode);\n  }\n  return (\n    <HeaderStyled>\n      <Wrapper>\n        <div className=\"content\">\n          <Link to=\"/\">\n            <h1>Where in the world?</h1>\n          </Link>\n          <div className=\"dark-mode\">\n            <p onClick={handleClick}>\n              <span className=\"moon\">\n                {darkMode ? (\n                  <i className=\"fas fa-moon\"></i>\n                ) : (\n                  <i className=\"far fa-moon\"></i>\n                )}\n              </span>\n              Dark Mode\n            </p>\n          </div>\n        </div>\n      </Wrapper>\n    </HeaderStyled>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CountrySelectedStyled = styled.div`\n  margin-top: 3em;\n  padding-bottom: 3em;\n  img {\n    width: 100%;\n    margin-bottom: 2em;\n  }\n  .grid {\n    display: grid;\n    grid-row-gap: 1em;\n  }\n  .border-item {\n    padding: 0.5em 2em;\n    border-radius: 5px;\n    margin-right: 15px;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n    display: inline-flex;\n    margin-bottom: 15px;\n    background: var(--white);\n  }\n  .languages {\n    span {\n      margin-right: 5px;\n      &:after {\n        content: \",\";\n      }\n      &:last-child {\n        &:after {\n          display: none;\n        }\n      }\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 120px;\n    margin-top: 5em;\n    .grid {\n      grid-template-columns: 1fr 1fr;\n    }\n    .borders {\n      display: inline-flex;\n      margin-right: 1em;\n      margin-top: 3.5em;\n    }\n  }\n`;\n\nfunction CountrySelected({\n  flag,\n  name,\n  nativeName,\n  population,\n  region,\n  subregion,\n  capital,\n  topLevelDomain,\n  currencies = [],\n  languages = [],\n  borders = [],\n  alpha2Code,\n}) {\n  console.log(flag);\n\n  return (\n    <CountrySelectedStyled>\n      <img src={flag} alt=\"\" />\n      <div>\n        <h2>{name}</h2>\n        <div className=\"grid\">\n          <div>\n            <p>\n              <strong>Native Name:</strong> {nativeName}\n            </p>\n            <p>\n              <strong>Population:</strong> {population}\n            </p>\n            <p>\n              <strong>Region:</strong> {region}\n            </p>\n            <p>\n              <strong>Sub Region:</strong> {subregion}\n            </p>\n            <p>\n              <strong>Capital:</strong> {capital}\n            </p>\n          </div>\n          <div>\n            <p>\n              <strong>Top Level Domain:</strong> {topLevelDomain}\n            </p>\n            <p>\n              <strong>Currencies:</strong>{\" \"}\n              {currencies.map((item) => (\n                <span>{item.name}</span>\n              ))}\n            </p>\n            <p className=\"languages\">\n              <strong>Languages:</strong>{\" \"}\n              {languages.map((item) => (\n                <span>{item.name}</span>\n              ))}\n            </p>\n          </div>\n        </div>\n        <p className=\"borders\">\n          <strong>Border Countries:</strong>\n        </p>\n        {borders.map((item) => (\n          <span className=\"border-item\">{item}</span>\n        ))}\n      </div>\n    </CountrySelectedStyled>\n  );\n}\n\nexport default CountrySelected;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./Wrapper\";\nimport { useSelector } from \"react-redux\";\nimport CountrySelected from \"./Country-Selected\";\n\nconst CountryPageStyled = styled.div`\n  .back {\n    background: var(--white);\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n    padding: 0.7em 2.2em;\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n    margin-top: 1em;\n    color: var(--black);\n    i {\n      margin-right: 5px;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    .back {\n      margin-top: 3em;\n    }\n  }\n`;\n\nfunction CountryPage({ match, history }) {\n  let DBcountry = useSelector((state) =>\n    state.countryList.find((item) => item.alpha2Code === match.params.id)\n  );\n  const [country, setCountry] = useState(DBcountry);\n  useEffect(() => {\n    if (!country) {\n      fetch(\n        `https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setCountry(data);\n          // console.log(\"data: \", data[0]);\n        });\n    }\n  }, [country, match.params.id]);\n  console.log(country);\n\n  function handleClick() {\n    history.goBack();\n  }\n  return (\n    <CountryPageStyled>\n      <Wrapper>\n        <button className=\"back\" onClick={handleClick}>\n          <i className=\"fas fa-long-arrow-alt-left\"></i> Back\n        </button>\n        <CountrySelected {...country} />\n      </Wrapper>\n    </CountryPageStyled>\n  );\n}\n\nexport default CountryPage;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CountryList from \"./Components/Country-list\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./Components/Reducer\";\nimport ActionList from \"./Components/Action-list\";\nimport Header from \"./Components/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CountryPage from \"./Components/Country-Page\";\n\nconst initialState = {\n  countryList: [],\n  countryListByName: [],\n  countryFilteredByRegion: [],\n  filterByRegion: \"\",\n};\n\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const mainClass = darkMode ? \"is-dark-mode\" : \"is-light-mode\";\n\n  console.log(\"checked\", checked);\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n    return () => {\n      mq.removeListener(changeMedia);\n    };\n  }, []);\n\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <Router>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Switch>\n            <Route path=\"/country/:id\" component={CountryPage} />\n            <Route path=\"/\">\n              <ActionList />\n              <CountryList />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}